{"version":3,"sources":["images/fork_knife.jpg","images/chicken.JPG","components/divider/divider.component.jsx","components/text-box/text-box.component.jsx","components/menu-items/menu-items.component.jsx","pages/menu.component.jsx","pages/home-page/home.component.jsx","components/hamburger/hamburger.component.jsx","components/navigation/navigation.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Divider","props","className","header","src","require","alt","height","width","TextBox","content","MenuItems","style","color","title","Object","keys","map","a","MenuPage","captions","Fragment","HomePage","Hamburger","line","toggled","line1","onClick","handleClick","Navigation","React","useState","setToggled","row","path","i","key","to","event","preventDefault","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.94773d46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fork_knife.ab781d0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chicken.1a7fb4a3.JPG\";","import React from 'react';\r\nimport './divider.styles.css'\r\n\r\nexport const Divider = (props) => {\r\n    return(\r\n        <div className='divider_container'>\r\n            <div className='divider-line1'>\r\n                <div className='end_square'>\r\n                </div>\r\n            </div>\r\n            {props.header ?\r\n                <img \r\n                src={require('../../images/fork_knife.jpg')}\r\n                alt=\"fork and knife symbol\" \r\n                height='30px' \r\n                width='30px'\r\n            /> :\r\n            null}\r\n            <div className='divider-line2'>\r\n            <div className='end_square right'>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './text-box.styles.css';\r\n\r\nexport const TextBox = (props) => {\r\n    return(\r\n        <div className='text-box'>\r\n            {props.content}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './menu-items.styles.css';\r\n\r\nexport const MenuItems = (props) => {\r\n\r\n    const content=props.content[0]\r\n\r\n    return(\r\n        <div className='menu-items'>\r\n            <h3 style={{color: props.content[1]}}>{props.title}</h3>\r\n            {Object.keys(content).map(a => <p>{a}{content[a]}</p>)}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './menu.styles.css';\r\nimport { Divider } from '../components/divider/divider.component';\r\nimport { TextBox } from '../components/text-box/text-box.component';\r\nimport { MenuItems } from '../components/menu-items/menu-items.component';\r\n\r\nexport const MenuPage = () => {\r\n\r\n    const captions = [\r\n        \"Rae's & Kay's Melting Pot is a family-owned, mother and daughter business that started out simply because of our strong passion and love for Puerto Rican and Soul Food.  \",\r\n        \"Our business thrives to create a balance between healthy and soul food with a twist of Spanish cuisine in-between.\"]\r\n\r\n    const mixUp = [{\r\n        \"Momma's BBQ Chicken Dinner\": \": (Choose 3 sides)\",\r\n        \"Momma's Southern Fried Chicken Dinner\": \": (Choose 3 sides)\",\r\n        \"For Soup & Salad Lovers\": \": (Ask about the soup of the day)\",\r\n        \"Wrap It Up\": \": (Chicken Salad, Tuna Salad, Turkey, Ham, Veggie Love)\"\r\n        },\r\n        'yellow'\r\n        ]\r\n\r\n    const madsCuisine = [{\r\n        \"Madelyne's Rice & Bean Pork Chop Dinner\": \": (Choose any 2 sides)\",\r\n        \"Pastelito Dinner\": \": (Chicken, Pork or Veggie) (Choose any 2 sides)\",\r\n        \"Corn Beef Hash Dinner\": '',\r\n        \"Rellenos de Papa\": \"\"\r\n        },\r\n        'purple'\r\n        ]\r\n\r\n    const sides = [{\r\n        \"Mamma's Potato Salad\": \"\",\r\n        \"Charkay's Mac & Cheese\": \"\",\r\n        \"Mamma's Macaroni Salad\": '',\r\n        \"Down South BBQ Backed Beans\": \"\",\r\n        \"Charkay's Collard Green\": \"\",\r\n        \"Madelyne's Arroz con Gandules\": '',\r\n        \"Madelyne's Red Rice & Beans\": \"\"\r\n        },\r\n        'white'\r\n    ]\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h1 className='menu-page-title'>RAE'S & KAY'S MELTING POT</h1>\r\n            <Divider header={true}/>\r\n            <TextBox content={captions[0]+captions[1]}></TextBox>\r\n            <img \r\n                src={require('../images/chicken.JPG')}\r\n                alt='chicken dinner'\r\n                height='250em'\r\n                width='350em'\r\n            />\r\n            <br />\r\n            <MenuItems content={mixUp} title='THE MIX UP'/>\r\n            <MenuItems content={madsCuisine} title=\"Madelyne's Puerto Rican Cuisine\"/>\r\n            <MenuItems content={sides} title=\"SIDE LOVERS\"/>\r\n            <Divider header={false}/>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport './home.styles.css';\r\n\r\nexport const HomePage = () => {\r\n    return(\r\n        <div className='home-page'>\r\n            <p>{'<--------'}Click here and then click Menu!</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './hamburger.styles.css';\r\n\r\n\r\nexport const Hamburger = (props) => {\r\n    let line = props.toggled ? 'line1' : 'line';\r\n    let line1 = props.toggled ? 'line3' : 'line2';\r\n    return(\r\n        <div className=\"block\" onClick={props.handleClick}>\r\n                <div className={line}></div>\r\n                <div className={line1}></div>\r\n                <div className={line1}></div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './navigation.styles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Hamburger } from '../hamburger/hamburger.component'\r\n\r\nexport const Navigation = (props) => {\r\n    const [toggled, setToggled] = React.useState(false)\r\n    const pages = [\r\n                {\r\n                    title: 'HOME',\r\n                    path: '/'\r\n                },\r\n                {\r\n                    title: 'MENU',\r\n                    path: '/menu'\r\n                }\r\n            ]\r\n\r\n    const handleClick = () => {\r\n          setToggled(!toggled)\r\n    }\r\n\r\n    let row = toggled ? 'row' : 'row1';\r\n    return (\r\n        <React.Fragment>\r\n            <Hamburger \r\n                handleClick={handleClick} \r\n                toggled={toggled}\r\n            />\r\n            <div className = {row}> \r\n            {pages.map((a, i) => {\r\n                return (\r\n                    <span className=\"hov\" key={i}>\r\n                        <Link \r\n                            className={\r\n                                toggled ? \r\n                                'linkClass' : \r\n                                'linkClass active'\r\n                            } \r\n                            to={a.path} \r\n                            onClick={\r\n                                !toggled ? \r\n                                (event) => event.preventDefault() : \r\n                                null\r\n                            }>\r\n                            {a.title}\r\n                        </Link>\r\n                    </span>\r\n                )\r\n            })}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport { MenuPage } from './pages/menu.component';\nimport { HomePage } from './pages/home-page/home.component'\nimport { Navigation } from './components/navigation/navigation.component';\nimport { Route } from 'react-router-dom'\n\nfunction App() {\nreturn (\n    <div className=\"App\">\n      <Navigation />\n      <Route exact path='/' component={HomePage} />\n      <Route exact path='/menu' component={MenuPage} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}